SerialOpen.synopsis = Opens a serial port.
SerialOpen.description = Opens the given serial port with the specified \
parameters.
SerialOpen.port = the port name, any of the values returned by <(serial-ports)>.
SerialOpen.baud_rate = the baud rate.
SerialOpen.data_bits = the data bits, 7 or 8.
SerialOpen.stop_bits = the stop bits, 1, 2 (1.5 stop bits) or 3 (2 stop bits).
SerialOpen.parity = the parity, any of the following: "none", "even", "odd", \
"mark" or "space".
SerialOpen.opened = true if port was opened sucessfully or false otherwise.

SerialClose.synopsis = Closes a serial port.
SerialClose.description = Closes the specified serial port.
SerialClose.port = the port to close.
SerialClose.closed = true if port was closed sucessfully or false otherwise.

SerialPorts.synopsis = List the serial ports available.
SerialPorts.description = Returns a list that contains the names of the \
serial ports available.
SerialPorts.port = a port name.

SerialRead.synopsis = Reads data from a serial port.
SerialRead.description = This function reads data from the specified serial \
port as a list of bytes when <mode> is "bytes" or as a string when <mode> is \
"line". In "line" mode, this function will block until a LF (10) or CR (13) is \
read. In "bytes" mode, this function will only block if <count> is greater \
than 0 and bytes available to read are less than <count>.
SerialRead.port = the port to read from.
SerialRead.mode = the read mode. It may be "bytes" or "line". \
By default, <mode> is "bytes".
SerialRead.count = the number of bytes to read in "bytes" mode. This function \
will block until <count> bytes are available. If <count> is 0, this function \
will only read the number of bytes available and therefore will never block. \
By default, <count> is zero.
SerialRead.result = the data read, in "line" mode a string without the \
ending LF or CR character and in "bytes" mode a list of bytes.

SerialWrite.synopsis = Writes data to a serial port.
SerialWrite.description = Writes a string, a byte or a chunk or bytes to the \
specified serial port.
SerialWrite.port = the port to write to.
SerialWrite.data = the data to write to the serial port. <data> may be a \
number, a list of numbers or a string. When <data> is a number, this number \
is sent as a byte. When <data> is a list of numbers they are sent as a \
sequence of bytes. When <data> is a string, this function sends the bytes of \
this string encoded in the specified <charset>.
SerialWrite.charset = the <charset> to use for converting <data> to bytes when \
<data> is a string. By default, <charset> is "UTF-8".
SerialWrite.num_sent = the number of bytes sent.

