("setup" => ((### "pinout configuration") "BUTTON" => 0 "RED" => 3 "GREEN" => 2 "LEFT_PWM" => 26 "LEFT_1" => 21 "LEFT_2" => 22 "RIGHT_PWM" => 23 "RIGHT_1" => 24 "RIGHT_2" => 25 "STANDBY" => 27 "ECHO" => 28 "TRIGGER" => 29 "PI" => 3.14159265359 "COSA" => 0.7071067811865109 "SINA" => -0.7071067811865841 "SQRT2" => 1.4142135623730951) "start" => (do (### "set pin mode operation") (gpio-mode setup/BUTTON "in") (gpio-mode setup/RED "out") (gpio-mode setup/GREEN "out") (gpio-mode setup/LEFT_PWM "pwm") (gpio-mode setup/LEFT_1 "out") (gpio-mode setup/LEFT_2 "out") (gpio-mode setup/RIGHT_PWM "pwm") (gpio-mode setup/RIGHT_1 "out") (gpio-mode setup/RIGHT_2 "out") (gpio-mode setup/STANDBY "out") (gpio-mode setup/ECHO "in") (gpio-mode setup/TRIGGER "out") (### "set default pin values") (gpio-write setup/GREEN 1) (gpio-write setup/RED 0) (gpio-write setup/STANDBY 1) (gpio-pwmc 8 100)) "distance" => (function () (gpio-write setup/TRIGGER 0) (delay 2) (gpio-write setup/TRIGGER 1) (delay 10) (gpio-write setup/TRIGGER 0) (set-local duration (gpio-pulse-in setup/ECHO 1 500000)) (round (/ duration 100))) "motors" => (function (left right) (### "left and right in range (-100..100)") (### left_motor) (gpio-write setup/LEFT_1 (if (> left 0) 1 0)) (gpio-write setup/LEFT_2 (if (< left 0) 1 0)) (gpio-pwm setup/LEFT_PWM (abs left)) (### right_motor) (gpio-write setup/RIGHT_1 (if (< right 0) 1 0)) (gpio-write setup/RIGHT_2 (if (> right 0) 1 0)) (gpio-pwm setup/RIGHT_PWM (abs right))) "check_collision" => (function () (local warning) (set-local k (* 0.1 (+ (abs mot_actual/left) (abs mot_actual/right)))) (set-local dist_max (+ 10 k)) (set-local dist_min (+ 5 k)) (if (< dist dist_min) (set warning true)) (if (> dist dist_max) (set warning false)) (gpio-write setup/RED warning) warning) "rules" => (do (when collision_risk (if (> mot_next/left 0) (set mot_next/left 0)) (if (> mot_next/right 0) (set mot_next/right 0)))) "main_loop" => (try (do (set mot_actual/left 0) (set mot_actual/right 0) (while running (### "take next motor power") (set mot_next mot_target) (### "calculate distance") (set dist (distance)) (### "check for collision") (set collision_risk (check_collision)) (### "evaluate rules") (eval rules) (### "apply next motor power") (when (!= mot_next mot_actual) (set mot_actual (clone mot_next)) (motors mot_actual/left mot_actual/right) (module-notify "@display")))) (ex) (do (motors 0 0) (set mot_actual/left 0) (set mot_actual/right 0) (gpio-write setup/RED 0))) "maxpower" => 50 "running" => false "dist" => 1756 "collision_risk" => false "mot_target" => (<#1> "left" => 0 "right" => 0) "mot_next" => <@1> "mot_actual" => (<#:1> "left" => 0 "right" => 0) "advanced" => ("widgets" => ("stick" => ("type" => "stick" "set-value" => @control "update-millis" => 100) "switch_1" => ("type" => "switch" "get-value" => @start-stop "label" => "Start / Stop" "set-value" => @start-stop) "d1" => ("type" => "display" "lines" => 3 "get-value" => @display "font-family" => "lcd") "ran" => ("type" => "range" "label" => "Max power" "get-value" => @get-power "set-value" => @set-power "min" => 0 "max" => 100 "step" => 1)) "layouts" => ("mobile-vertical" => ("dimensions" => (3 6) "stretch" => false "widgets" => (("d1" 0 0 3 1) ("stick" 0 1 3 3) ("ran" 0 4 3 1) ("switch_1" 0 5 3 1)))) "polling-interval" => 500) "basic" => ("widgets" => ("button_2" => ("type" => "button" "button-id" => null "font-family" => "arial" "font-size" => 14 "label" => "LEFT" "on-pressed" => @left "on-released" => @stop) "button_1" => ("type" => "button" "button-id" => null "font-family" => "arial" "font-size" => 14 "label" => "FORWARD" "on-pressed" => @forward "on-released" => @stop) "button_4" => ("type" => "button" "button-id" => null "font-family" => "arial" "font-size" => 14 "label" => "LED" "on-pressed" => @led "on-released" => null) "button_3" => ("type" => "button" "button-id" => null "font-family" => "arial" "font-size" => 14 "label" => "RIGHT" "on-pressed" => @right "on-released" => @stop) "button_5" => ("type" => "button" "button-id" => null "font-family" => "arial" "font-size" => 14 "label" => "BACKWARD" "on-pressed" => @backward "on-released" => @stop)) "layouts" => ("mobile-vertical" => ("dimensions" => (3 3) "stretch" => false "widgets" => (("button_1" 1 0 1 1) ("button_2" 0 1 1 1) ("button_4" 1 1 1 1) ("button_3" 2 1 1 1) ("button_5" 1 2 1 1)))) "polling-interval" => 0) "@dashboards" => (function (context data) (list "Advanced" => advanced "Basic" => basic)) "@display" => (function (context data) (if running (concat "power: " maxpower " " mot_actual/left " " mot_actual/right " \ndistance: " dist) "")) "@get-power" => (function (context data) maxpower) "@set-power" => (function (context data) (set maxpower data) (module-notify "@display" "@get-power")) "@control" => (function (context data) (set-local dx (first data)) (set-local dy (last data)) (set-local left (round (* maxpower setup/SQRT2 (- (* setup/COSA dx) (* setup/SINA dy))))) (set-local right (round (* maxpower setup/SQRT2 (+ (* setup/SINA dx) (* setup/COSA dy))))) (### "left and right in [-maxpower..maxpower]") (cond (when (< left (- maxpower)) (set left (- maxpower))) (when (> left maxpower) (set left maxpower))) (cond (when (< right (- maxpower)) (set right (- maxpower))) (when (> right maxpower) (set right maxpower))) (set mot_target (list "left" => left "right" => right))) "@start-stop" => (function (context run) (if (!= run null) (cond (when (and run (not running)) (set running true) (spawn (eval main_loop)) (module-notify "@display")) (when (and (not run) running) (set running false) (module-notify "@display")))) running) "@stop" => (function (ctx data) (motors 0 0)) "@forward" => (function (ctx data) (motors 20 20)) "@left" => (function (ctx data) (motors -20 20)) "@right" => (function (ctx data) (motors 20 -20)) "@led" => (function (ctx data) (### "invert GREEN led") (gpio-write setup/GREEN (not (gpio-read setup/GREEN)))) "@backward" => (function (ctx data) (motors -20 -20)))