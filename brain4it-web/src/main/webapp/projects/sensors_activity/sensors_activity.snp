("module-metadata" => ("icon" => "sensors" "description" => "This module provides information about the sensors activity") "setup" => ((### "Configuration parameters") "instances" => ("santfeliu" => ("url" => "http://smartcity.santfeliu.cat:8091")) "email_receivers" => (("colladorm@santfeliu.cat" "Belén Collado")) "host" => "HELIOS.santfeliu.local" "port" => 25 "from" => "colladorm@santfeliu.cat" "subject" => "Sensor failure " "body" => "The following sensor is not working as expected. Please check: " "sensors-to-verify" => (("ID" => "0072-FZN_velocidad" "provider" => "treelogic" "key" => "442a5727a7003ffe9060ecc2698f3180aeceb5d8342bbd5ef705c3d1f1b7d0da") ("ID" => "0145-FKH_velocidad" "provider" => "treelogic" "key" => "442a5727a7003ffe9060ecc2698f3180aeceb5d8342bbd5ef705c3d1f1b7d0da") ("ID" => "0222HZW_velocity" "provider" => "FCC" "key" => "f72df9b12f02d0600360805e1ecfc2f40b486c93853b6c2021be4c5e7dd7349a")) "display_text" => "The following sensors are not working as expected. Please check: ") "variables" => ("access_interval" => 24 "access_interval_sec" => 86400 "access_interval_msec" => 86400000 "timestamp_ref" => 1.537700544812E12 "timestamp" => 1533716657000 "sensors_failing" => ("0072-FZN_velocidad" "0145-FKH_velocidad" "0222HZW_velocity") "to" => "colladorm@santfeliu.cat" "active" => true) "start" => (do (### "Starts the module") (spawn (eval main))) "stop" => (do (### "Stops the module") (timer-cancel) (set variables/active false)) "main" => (timer-schedule (function () (try (do (### "Calculates time_reference, checks sensors") (reset-sensors-failing) (calculate-reference-timestamp) (check-sensors) (set variables/active true)) (ex "*" => (do (### "When an error takes place, it is saved in a variable named 'error'") (set error (list (format-date (date)) ex)))))) 0 variables/access_interval_msec) "get-sensor-values" => (function (sentilo_instance sensor) (### "Given a sentilo instance and a sensor, this functions provides the last sensor data") (local sensor_data) (set sensor_data (parse (get (http "GET" (concat sentilo_instance/url "/data/" sensor/provider "/" sensor/ID) "properties" => (list "IDENTITY_KEY" => sensor/key)) "body") "json")) sensor_data) "reset-sensors-failing" => (function (header data) (### "Eliminates all the sensors failing in the previous iteration") (set variables/sensors_failing (list))) "calculate-reference-timestamp" => (function (header data) (### "Calculates a reference_point in order to decide whether the sensor is working properly") (local current_date) (set current_date (date)) (set variables/timestamp_ref (- current_date variables/access_interval_msec))) "check-sensors" => (function (header data) (### "Sensors-to-verify contains all the sensors to be checked") (for-each setup/sensors-to-verify x (evaluate-timestamp x))) "evaluate-timestamp" => (function (sensor) (local current_timestamp data isWeekend) (### "The last sensor data is obtained") (set data (get-sensor-values setup/instances/santfeliu sensor)) (set isWeekend (evaluate-week-day)) (if (= false isWeekend) (do (if (and (!= data null) (!= 0 (size data/observations))) (do (set current_timestamp (parse-date data/observations/0/timestamp "dd/MM/yyyy'T'HH:mm:ss")) (set variables/timestamp current_timestamp) (### "Sentilo server is 2 hours behind Brain4it server") (set current_timestamp (date "add" current_timestamp "hour" 2)) (### "The sensor data has not been updated since the last check, it is not working") (if (< current_timestamp variables/timestamp_ref) (do (send-email sensor/ID sensor/provider) (push variables/sensors_failing sensor/ID)))) (do (### "The checked sensor has no valid data so is failing too") (send-email sensor/ID sensor/provider) (push variables/sensors_failing sensor/ID)))) (do (evaluate-weekend)))) "evaluate-week-day" => (function (local day-1 day-2 date-to-eval is-weekend) (set day-1 "sábado") (set day-2 "domingo") (set date-to-eval (date "now")) (if (or (= (format-date date-to-eval "EEEE") day-1) (= (format-date date-to-eval "EEEE") day-2)) (do (set is-weekend true)) (do (set is-weekend false)))) "calculate-access-interval-msec" => (function (seconds) (### "Set the given interval to miliseconds") (set variables/access_interval_msec (* seconds 1000))) "calculate-access-interval-sec" => (function (hours) (### "Set the given interval to seconds") (set variables/access_interval_sec (* hours 3600))) "evaluate-weekend" => (function (### "Weekends evals are saved in a variable named 'warning'") (set warning (list (format-date (date)) "Weekend Evaluation"))) "send-email" => (function (sensor_id sensor_provider) (### "This fuction sends an email to the selected direction in order to inform about the incidence") (smtp "host" => setup/host "port" => setup/port "from" => setup/from "to" => variables/to "subject" => (concat setup/subject sensor_id) "body" => (concat setup/body "\n" "Provider: " sensor_provider "\n" "Sensor ID: " sensor_id))) "@dashboards" => (function (ctx data) (list "Sensors Activity" => dashboard-sensor-activity)) "dashboard-sensor-activity" => ("widgets" => ("range_1" => ("type" => "range" "get-value" => @get-access-interval "label" => "Access Interval (Hours)" "max" => 24 "min" => 0 "set-value" => @set-access-interval) "editText_1" => ("type" => "editText" "font-family" => "arial" "font-size" => 14 "get-value" => @get-display-values "label" => "Sensors List" "set-value" => null "update-millis" => 100) "select_1" => ("type" => "select" "get-options" => @get-list-receivers "get-value" => @get-receiver "label" => "Send Email to" "set-value" => @set-receiver)) "layouts" => ("mobile-vertical" => ("dimensions" => (5 9) "stretch" => true "widgets" => (("range_1" 1 1 3 1) ("select_1" 1 2 3 1) ("editText_1" 1 4 3 3)))) "polling-interval" => 0) "@set-access-interval" => (function (header data) (### "Sets the value in the 'range' widget") (set variables/access_interval data) (calculate-access-interval-sec data) (calculate-access-interval-msec variables/access_interval_sec) (if variables/active (do (timer-cancel) (eval main))) (module-notify "@get-access-interval")) "@get-access-interval" => (function (header data) (### "Gets the value of the 'range' widget") variables/access_interval) "@get-list-receivers" => (function (header data) (### "Gets the_list containing all the possible email directions") setup/email_receivers) "@set-receiver" => (function (header option) (### "Sets the email direction") (set variables/to option) (module-notify "@get-receiver")) "@get-receiver" => (function (header option) (### "Gets the email direction") variables/to) "@get-display-values" => (function (header data) (### "Provides the text showed in the display") (local sensors) (set sensors "") (for-each variables/sensors_failing sensor (set sensors (concat sensors sensor "\n"))) (concat setup/display_text "\n" sensors)) "warning" => ("23-sep-2018 8:00:12" "Weekend Evaluation") "error" => ("03-sep-2018 15:48:21" ("ConnectException" "Connection refused: connect")))