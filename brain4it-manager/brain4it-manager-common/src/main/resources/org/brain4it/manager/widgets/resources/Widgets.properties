# Widgets properties

button = A push button that can invoke a function when it is pressed and when \
it is released.
button.label =  the text to show on the button. Default value is 'PUSH'.
button.button-id = a string that represents the button identifier that this widget \
will send to the exterior functions as the data argument. By default is null.
button.on-pressed = the exterior function to call when the button is pressed.
button.on-released = the exterior function to call when the button is released.
button.font-family = the font family of the text. Supported values are "lcd", \
"monospace" and "fontawesome" but additional families may also be supported.
button.font-size = the font size of the text in pixels. Default value is 14.

display = A multiline text display.
display.lines = the number of lines of the display. Default value is 3.
display.font-family = the font family of the text. Supported values are "lcd", \
"monospace" and "fontawesome" but additional families may also be supported.
display.get-value = the exterior function that provides the text to show.

editText = A component to edit text.
editText.label =  the text to show above the edit box. \
By default label is an empty string.
editText.font-family = the font family of the text. \
Supported values are "lcd", "monospace" and "fontawesome" but additional \
families may also be supported.
editText.font-size = the font size of the text in pixels. Default value is 14.
editText.get-value = the exterior function that provides the text to edit.
editText.set-value = the exterior function that will be called when the \
text changes. That text is passed to the exterior function as argument.
editText.invoke-interval = the minimum time in milliseconds between two \
consecutive calls to the set-value external function.

gauge = A circular gauge with a needle that represents a numeric value within \
a range.
gauge.label = the text to show inside the gauge.
gauge.min = the minimum value of the gauge. Default value is 0.
gauge.max = the maximum value of the gauge. Default value is 100.
gauge.divisions = the number of divisions painted on the gauge \
(must be greater than 4). Default value is 10.
gauge.decimals = the maximum number of decimals to show for the value. \
By default is 0.
gauge.get-value = the exterior function that provides the value of the gauge.

graph = A widget that plots the values of multiple datasets in time scale. \
The time range can be changed dinamically dragging the mouse up and down. \
A mouse double click starts/stops the graph animation.
graph.label = the text to show on top of the graph widget.
graph.time-range = the visible time range that must be one of the \
following values: 1s, 5s, 20s, 1m, 5m, 30m, 1h, 4h, 8h, 12h, 1d, 1w, 4w, 1y.
graph.max-data = the maximum number of values to retain for each dataset. \
Default value is 1000.
graph.date-format = a Java date pattern to specifiy the date format. \
Default value is "dd/MM/yyyy".
graph.dataset-names = a string that contains the names of the datasets to plot, \
separated by spaces.
graph.get-value = the exterior function that returns the current values to \
plot for all datasets. The returned value can be: a single number or a list \
according to these formats: (dataSetName? => value+) or \
(dataSetName? => (value timestamp)+)
graph.get-history = the exterior function to obtain the historic values to \
plot. The returned value must be a list according to this format: \
(dataSetName? => ((value timestamp)+)+)

image = A widget to display images and videos.
image.url = the exterior function that provides the url of the image or video \
to display. The supported image formats are JPEG, PNG and GIF. The only \
supported video format is MJPEG.

indicator = A widget to show an indicator value.
indicator.label = a string representing the title of the indicator that is \
displayed on top of its value. By default no title is shown.
indicator.font-family = the font family of the indicator value. Supported \
families are "lcd", "monospace" and "fontawesome" but other may also \
be supported.
indicator.units = a string that indicates the units of this indicator. \
No units are displayed by default.
indicator.max-value-length = the maximum number of characters of the indicator \
value that will be displayed. If max-value-length is 0, the font size of \
the indicator value will be adjusted to fit all its characters.
indicator.get-value = the exterior function that provides the value of the \
indicator.

led = A led indicator that turns on and off depending on the value of a \
exterior function.
led.label = the text to paint under the led.
led.color = the color of the led in hexadecimal format: #RRGGBB. \
Default color is yellow (#FFFF00).
led.get-value = the exterior function that provides a boolean value than \
determines the state of the led.

range = A slider control that allows you to select a numeric value within a \
range. Changes in the server are also reflected in the slider.
range.label = the text to show above the range control.
range.min = the minimum value of the range. Default value is 0.
range.max = the maximum value of the range. Default value is 100.
range.get-value = the exterior function that provides the value of the range.
range.set-value = the exterior function that will be called when the slider is \
changed. The argument passed to that function is the current value of the range.

select = A component that allows you to select a value from a list of options. \
Changes in the server are also reflected in the widget.
select.label = the text to show above the selector.
select.get-options = the exterior function that provides the list of options. \
Each option is a list with 2 elements, the value to send to the server and the \
label to display, both are strings. Example: (("1" "Option 1") ("2" "Option 2") ...)
select.get-value = the exterior function that provides the current value of the select widget.
select.set-value = the exterior function that will be called when the selected option \
changes. The argument passed to that function is the value of the current option.

stick = A stick control designed to drive robots, drones and other mobile objects.
stick.set-value = the exterior function to call when the stick position changes. \
The argument passed to that function is a list (x y) that contains the \
horizontal and vertical position of the stick, both in the range (-100, 100).
stick.invoke-interval = the minimum time in milliseconds between two \
consecutive calls to the set-value external function.

switch = A switch button.
switch.label = the text to show beside the switch button.
switch.get-value = the exterior function that provides the current state \
of the switch (a boolean).
switch.set-value = the exterior function that will be called when the state of \
the switch changes. The data argument passed to that function is a boolean \
representing the current state of the switch.

